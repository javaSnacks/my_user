package com.slw.my_user.model;

import java.util.ArrayList;
import java.util.List;

public class RelationshipExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s_user.t_relationship
     *
     * @mbg.generated Tue Jun 09 13:48:15 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s_user.t_relationship
     *
     * @mbg.generated Tue Jun 09 13:48:15 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s_user.t_relationship
     *
     * @mbg.generated Tue Jun 09 13:48:15 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_user.t_relationship
     *
     * @mbg.generated Tue Jun 09 13:48:15 CST 2020
     */
    public RelationshipExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_user.t_relationship
     *
     * @mbg.generated Tue Jun 09 13:48:15 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_user.t_relationship
     *
     * @mbg.generated Tue Jun 09 13:48:15 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_user.t_relationship
     *
     * @mbg.generated Tue Jun 09 13:48:15 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_user.t_relationship
     *
     * @mbg.generated Tue Jun 09 13:48:15 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_user.t_relationship
     *
     * @mbg.generated Tue Jun 09 13:48:15 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_user.t_relationship
     *
     * @mbg.generated Tue Jun 09 13:48:15 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_user.t_relationship
     *
     * @mbg.generated Tue Jun 09 13:48:15 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_user.t_relationship
     *
     * @mbg.generated Tue Jun 09 13:48:15 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_user.t_relationship
     *
     * @mbg.generated Tue Jun 09 13:48:15 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_user.t_relationship
     *
     * @mbg.generated Tue Jun 09 13:48:15 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s_user.t_relationship
     *
     * @mbg.generated Tue Jun 09 13:48:15 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andRelationshipTypeIsNull() {
            addCriterion("relationship_type is null");
            return (Criteria) this;
        }

        public Criteria andRelationshipTypeIsNotNull() {
            addCriterion("relationship_type is not null");
            return (Criteria) this;
        }

        public Criteria andRelationshipTypeEqualTo(Integer value) {
            addCriterion("relationship_type =", value, "relationshipType");
            return (Criteria) this;
        }

        public Criteria andRelationshipTypeNotEqualTo(Integer value) {
            addCriterion("relationship_type <>", value, "relationshipType");
            return (Criteria) this;
        }

        public Criteria andRelationshipTypeGreaterThan(Integer value) {
            addCriterion("relationship_type >", value, "relationshipType");
            return (Criteria) this;
        }

        public Criteria andRelationshipTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("relationship_type >=", value, "relationshipType");
            return (Criteria) this;
        }

        public Criteria andRelationshipTypeLessThan(Integer value) {
            addCriterion("relationship_type <", value, "relationshipType");
            return (Criteria) this;
        }

        public Criteria andRelationshipTypeLessThanOrEqualTo(Integer value) {
            addCriterion("relationship_type <=", value, "relationshipType");
            return (Criteria) this;
        }

        public Criteria andRelationshipTypeIn(List<Integer> values) {
            addCriterion("relationship_type in", values, "relationshipType");
            return (Criteria) this;
        }

        public Criteria andRelationshipTypeNotIn(List<Integer> values) {
            addCriterion("relationship_type not in", values, "relationshipType");
            return (Criteria) this;
        }

        public Criteria andRelationshipTypeBetween(Integer value1, Integer value2) {
            addCriterion("relationship_type between", value1, value2, "relationshipType");
            return (Criteria) this;
        }

        public Criteria andRelationshipTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("relationship_type not between", value1, value2, "relationshipType");
            return (Criteria) this;
        }

        public Criteria andPersonOneIsNull() {
            addCriterion("person_one is null");
            return (Criteria) this;
        }

        public Criteria andPersonOneIsNotNull() {
            addCriterion("person_one is not null");
            return (Criteria) this;
        }

        public Criteria andPersonOneEqualTo(Integer value) {
            addCriterion("person_one =", value, "personOne");
            return (Criteria) this;
        }

        public Criteria andPersonOneNotEqualTo(Integer value) {
            addCriterion("person_one <>", value, "personOne");
            return (Criteria) this;
        }

        public Criteria andPersonOneGreaterThan(Integer value) {
            addCriterion("person_one >", value, "personOne");
            return (Criteria) this;
        }

        public Criteria andPersonOneGreaterThanOrEqualTo(Integer value) {
            addCriterion("person_one >=", value, "personOne");
            return (Criteria) this;
        }

        public Criteria andPersonOneLessThan(Integer value) {
            addCriterion("person_one <", value, "personOne");
            return (Criteria) this;
        }

        public Criteria andPersonOneLessThanOrEqualTo(Integer value) {
            addCriterion("person_one <=", value, "personOne");
            return (Criteria) this;
        }

        public Criteria andPersonOneIn(List<Integer> values) {
            addCriterion("person_one in", values, "personOne");
            return (Criteria) this;
        }

        public Criteria andPersonOneNotIn(List<Integer> values) {
            addCriterion("person_one not in", values, "personOne");
            return (Criteria) this;
        }

        public Criteria andPersonOneBetween(Integer value1, Integer value2) {
            addCriterion("person_one between", value1, value2, "personOne");
            return (Criteria) this;
        }

        public Criteria andPersonOneNotBetween(Integer value1, Integer value2) {
            addCriterion("person_one not between", value1, value2, "personOne");
            return (Criteria) this;
        }

        public Criteria andPersonTwoIsNull() {
            addCriterion("person_two is null");
            return (Criteria) this;
        }

        public Criteria andPersonTwoIsNotNull() {
            addCriterion("person_two is not null");
            return (Criteria) this;
        }

        public Criteria andPersonTwoEqualTo(Integer value) {
            addCriterion("person_two =", value, "personTwo");
            return (Criteria) this;
        }

        public Criteria andPersonTwoNotEqualTo(Integer value) {
            addCriterion("person_two <>", value, "personTwo");
            return (Criteria) this;
        }

        public Criteria andPersonTwoGreaterThan(Integer value) {
            addCriterion("person_two >", value, "personTwo");
            return (Criteria) this;
        }

        public Criteria andPersonTwoGreaterThanOrEqualTo(Integer value) {
            addCriterion("person_two >=", value, "personTwo");
            return (Criteria) this;
        }

        public Criteria andPersonTwoLessThan(Integer value) {
            addCriterion("person_two <", value, "personTwo");
            return (Criteria) this;
        }

        public Criteria andPersonTwoLessThanOrEqualTo(Integer value) {
            addCriterion("person_two <=", value, "personTwo");
            return (Criteria) this;
        }

        public Criteria andPersonTwoIn(List<Integer> values) {
            addCriterion("person_two in", values, "personTwo");
            return (Criteria) this;
        }

        public Criteria andPersonTwoNotIn(List<Integer> values) {
            addCriterion("person_two not in", values, "personTwo");
            return (Criteria) this;
        }

        public Criteria andPersonTwoBetween(Integer value1, Integer value2) {
            addCriterion("person_two between", value1, value2, "personTwo");
            return (Criteria) this;
        }

        public Criteria andPersonTwoNotBetween(Integer value1, Integer value2) {
            addCriterion("person_two not between", value1, value2, "personTwo");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Long value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Long value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Long value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Long value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Long value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Long value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Long> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Long> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Long value1, Long value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Long value1, Long value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andExpireTimeIsNull() {
            addCriterion("expire_time is null");
            return (Criteria) this;
        }

        public Criteria andExpireTimeIsNotNull() {
            addCriterion("expire_time is not null");
            return (Criteria) this;
        }

        public Criteria andExpireTimeEqualTo(Long value) {
            addCriterion("expire_time =", value, "expireTime");
            return (Criteria) this;
        }

        public Criteria andExpireTimeNotEqualTo(Long value) {
            addCriterion("expire_time <>", value, "expireTime");
            return (Criteria) this;
        }

        public Criteria andExpireTimeGreaterThan(Long value) {
            addCriterion("expire_time >", value, "expireTime");
            return (Criteria) this;
        }

        public Criteria andExpireTimeGreaterThanOrEqualTo(Long value) {
            addCriterion("expire_time >=", value, "expireTime");
            return (Criteria) this;
        }

        public Criteria andExpireTimeLessThan(Long value) {
            addCriterion("expire_time <", value, "expireTime");
            return (Criteria) this;
        }

        public Criteria andExpireTimeLessThanOrEqualTo(Long value) {
            addCriterion("expire_time <=", value, "expireTime");
            return (Criteria) this;
        }

        public Criteria andExpireTimeIn(List<Long> values) {
            addCriterion("expire_time in", values, "expireTime");
            return (Criteria) this;
        }

        public Criteria andExpireTimeNotIn(List<Long> values) {
            addCriterion("expire_time not in", values, "expireTime");
            return (Criteria) this;
        }

        public Criteria andExpireTimeBetween(Long value1, Long value2) {
            addCriterion("expire_time between", value1, value2, "expireTime");
            return (Criteria) this;
        }

        public Criteria andExpireTimeNotBetween(Long value1, Long value2) {
            addCriterion("expire_time not between", value1, value2, "expireTime");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeIsNull() {
            addCriterion("delete_time is null");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeIsNotNull() {
            addCriterion("delete_time is not null");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeEqualTo(Long value) {
            addCriterion("delete_time =", value, "deleteTime");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeNotEqualTo(Long value) {
            addCriterion("delete_time <>", value, "deleteTime");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeGreaterThan(Long value) {
            addCriterion("delete_time >", value, "deleteTime");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeGreaterThanOrEqualTo(Long value) {
            addCriterion("delete_time >=", value, "deleteTime");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeLessThan(Long value) {
            addCriterion("delete_time <", value, "deleteTime");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeLessThanOrEqualTo(Long value) {
            addCriterion("delete_time <=", value, "deleteTime");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeIn(List<Long> values) {
            addCriterion("delete_time in", values, "deleteTime");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeNotIn(List<Long> values) {
            addCriterion("delete_time not in", values, "deleteTime");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeBetween(Long value1, Long value2) {
            addCriterion("delete_time between", value1, value2, "deleteTime");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeNotBetween(Long value1, Long value2) {
            addCriterion("delete_time not between", value1, value2, "deleteTime");
            return (Criteria) this;
        }

        public Criteria andValidIsNull() {
            addCriterion("valid is null");
            return (Criteria) this;
        }

        public Criteria andValidIsNotNull() {
            addCriterion("valid is not null");
            return (Criteria) this;
        }

        public Criteria andValidEqualTo(Integer value) {
            addCriterion("valid =", value, "valid");
            return (Criteria) this;
        }

        public Criteria andValidNotEqualTo(Integer value) {
            addCriterion("valid <>", value, "valid");
            return (Criteria) this;
        }

        public Criteria andValidGreaterThan(Integer value) {
            addCriterion("valid >", value, "valid");
            return (Criteria) this;
        }

        public Criteria andValidGreaterThanOrEqualTo(Integer value) {
            addCriterion("valid >=", value, "valid");
            return (Criteria) this;
        }

        public Criteria andValidLessThan(Integer value) {
            addCriterion("valid <", value, "valid");
            return (Criteria) this;
        }

        public Criteria andValidLessThanOrEqualTo(Integer value) {
            addCriterion("valid <=", value, "valid");
            return (Criteria) this;
        }

        public Criteria andValidIn(List<Integer> values) {
            addCriterion("valid in", values, "valid");
            return (Criteria) this;
        }

        public Criteria andValidNotIn(List<Integer> values) {
            addCriterion("valid not in", values, "valid");
            return (Criteria) this;
        }

        public Criteria andValidBetween(Integer value1, Integer value2) {
            addCriterion("valid between", value1, value2, "valid");
            return (Criteria) this;
        }

        public Criteria andValidNotBetween(Integer value1, Integer value2) {
            addCriterion("valid not between", value1, value2, "valid");
            return (Criteria) this;
        }

        public Criteria andOperatorIsNull() {
            addCriterion("operator is null");
            return (Criteria) this;
        }

        public Criteria andOperatorIsNotNull() {
            addCriterion("operator is not null");
            return (Criteria) this;
        }

        public Criteria andOperatorEqualTo(Integer value) {
            addCriterion("operator =", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorNotEqualTo(Integer value) {
            addCriterion("operator <>", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorGreaterThan(Integer value) {
            addCriterion("operator >", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorGreaterThanOrEqualTo(Integer value) {
            addCriterion("operator >=", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorLessThan(Integer value) {
            addCriterion("operator <", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorLessThanOrEqualTo(Integer value) {
            addCriterion("operator <=", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorIn(List<Integer> values) {
            addCriterion("operator in", values, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorNotIn(List<Integer> values) {
            addCriterion("operator not in", values, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorBetween(Integer value1, Integer value2) {
            addCriterion("operator between", value1, value2, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorNotBetween(Integer value1, Integer value2) {
            addCriterion("operator not between", value1, value2, "operator");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s_user.t_relationship
     *
     * @mbg.generated do_not_delete_during_merge Tue Jun 09 13:48:15 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s_user.t_relationship
     *
     * @mbg.generated Tue Jun 09 13:48:15 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}